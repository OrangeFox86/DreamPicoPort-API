#include "DreamPicoPortApi.hpp"

#include <cstdio>
#include <thread>

void response(std::uint8_t cmd, const std::vector<std::uint8_t>& payload)
{
    printf("Response received; cmd: %02hhx\n", cmd);
    for (std::uint8_t b : payload)
    {
        printf("%02hhx ", b);
    }
    printf("\n");
}

int main(int argc, char **argv)
{
    std::unique_ptr<dpp_api::DppDevice> dppDevice = dpp_api::DppDevice::find("E66430A64B2E6538");
    if (dppDevice)
    {
        printf("FOUND!\n");
        if (!dppDevice->connect())
        {
            printf("Failed to connect\n");
            return 1;
        }
        bool sent = dppDevice->send('0', {0x0C, 0x01, 0x00, 0x32, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x3F, 0xC0, 0x02, 0x01, 0xFC, 0x01, 0xC0, 0x3C, 0x0C, 0x03, 0xFE, 0x06, 0x00, 0x07, 0x98, 0x07, 0x6F, 0x08, 0x00, 0x71, 0xF0, 0x0E, 0xFF, 0x10, 0x00, 0x0C, 0x60, 0x1F, 0xFF, 0x60, 0x00, 0x02, 0x30, 0x3F, 0x6D, 0xC0, 0x00, 0x01, 0x18, 0x36, 0xFF, 0x83, 0x01, 0xF0, 0x14, 0x7F, 0xFF, 0xBD, 0x06, 0x0E, 0x10, 0x7F, 0x6D, 0xCE, 0x38, 0x07, 0xA0, 0xF6, 0xFF, 0x8B, 0xC8, 0x07, 0xC0, 0xFF, 0xC3, 0x0F, 0x0C, 0x05, 0x40, 0x7F, 0x1F, 0x1F, 0x0E, 0x05, 0x60, 0x7E, 0x67, 0xFD, 0x0B, 0x87, 0x3F, 0xC7, 0x8F, 0xEB, 0x0D, 0xFF, 0xF8, 0xF1, 0x33, 0x55, 0x0A, 0xBF, 0xFF, 0x3D, 0x46, 0xAB, 0x0D, 0x55, 0x63, 0xE1, 0x0F, 0x55, 0x0A, 0xAA, 0xA0, 0x7B, 0x3A, 0xAA, 0x05, 0x55, 0x60, 0x21, 0xE3, 0x56, 0x06, 0xAA, 0xA0, 0x3C, 0x82, 0xAA, 0x05, 0x55, 0x60, 0x27, 0x07, 0x56, 0x02, 0xAA, 0xA0, 0x21, 0x06, 0xAA, 0x03, 0x55, 0x40, 0x20, 0x07, 0x54, 0x01, 0xAA, 0xC0, 0x20, 0x0D, 0xAC, 0x00, 0xD5, 0x40, 0x60, 0x1C, 0xF8, 0x00, 0x6A, 0x80, 0x70, 0x14, 0x10, 0x00, 0x3F, 0x00, 0x50, 0x22, 0x00, 0x00, 0x18, 0x00, 0x48, 0x22, 0x00, 0x00, 0x0E, 0x00, 0x88, 0x41, 0x00, 0x00, 0x00, 0x00, 0x84, 0x41, 0x00, 0x00, 0x00, 0x01, 0x04, 0x80, 0x80, 0x00, 0x00, 0x01, 0x02}, response);
        if (!sent)
        {
            printf("Failed to send\n");
            return 2;
        }
        std::this_thread::sleep_for(std::chrono::milliseconds(1000));
    }
    else
    {
        printf("not found :(\n");
        return 3;
    }
    return 0;
}
